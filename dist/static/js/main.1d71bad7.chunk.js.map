{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/PrivateRoute.js","components/auth/PublicOnlyRoute.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fb.js","index.js"],"names":["SignedInLinks","react_default","a","createElement","className","NavLink","to","onClick","this","props","signOut","profile","initials","Component","connect","dispatch","getState","_ref2","getFirebase","auth","then","type","SignedOutLinks","Navbar","_this$props","Link","uid","layout_SignedInLinks","layout_SignedOutLinks","state","firebase","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","id","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","projects_ProjectList","dashboard_Notifications","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","ownProps","match","params","data","SignIn","email","password","onChange","e","preventDefault","_this","setState","Object","defineProperty","target","value","onSubmit","signIn","authError","htmlFor","creds","credentials","_ref","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","console","log","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","PrivateRoute","Route","Redirect","PublicOnlyRoute","App","BrowserRouter","layout_Navbar","Switch","auth_PrivateRoute","exact","path","component","auth_PublicOnlyRoute","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fb","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d71bad7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nclass SignedInLinks extends Component {\n    render() {\n        return (\n            <ul className=\"right\">\n                <li><NavLink to=\"/create-project\">New Project</NavLink></li>\n                <li><button className=\"btn lighten-1\" onClick={this.props.signOut} >Logout</button></li>\n                <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{this.props.profile.initials}</NavLink></li>\n            </ul>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email, newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch((err) => {\n            console.log(err);\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass SignedOutLinks extends Component {\n    render() {\n        return (\n            <ul className=\"right\">\n                <li><NavLink to=\"/signup\">Signup</NavLink></li>\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\n            </ul>\n        );\n    }\n}\n\nexport default SignedOutLinks;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nclass Navbar extends Component {\n    render() {\n        const { auth, profile } = this.props;\n        return (\n            <nav className=\"nav-wrapper grey darken-3\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"brand-logo\">Spudz</Link>\n                    {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n};\n\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass ProjectSummary extends Component {\n    render() {\n        const { project } = this.props;\n        return (\n            <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title project-title\">{project.title}</span>\n                    <p>Posted by { project.authorFirstName + \" \" + project.authorLastName }</p>\n                    <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProjectSummary;","import React, { Component } from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nclass ProjectList extends Component {\n    render() {\n        const { projects } = this.props;\n        return (\n            <div className=\"project-list section\">\n                {projects && projects.map((project) => {\n                    return (\n                        <Link key={project.id} to={'/project/' + project.id}>\n                            <ProjectSummary project={project} />\n                        </Link>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Notifications extends Component {\n    render() {\n        const { notifications } = this.props;\n        return (\n            <div className=\"section\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <div className=\"card-title\">Notifications</div>\n                        <ul className=\"notifications\">\n                            {notifications && notifications.map(item => {\n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notifications;","import React, { Component } from 'react';\nimport ProjectList from '../projects/ProjectList';\nimport Notifications from './Notifications';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, notifications } = this.props;\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      projects: state.firestore.ordered.projects,\n      notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects',  orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\n\nclass ProjectDetails extends Component {\n    render() {\n        const { project } = this.props;\n        if(project) {\n            return (\n                <div className=\"container section project-details\">\n                <Link to=\"/\" className=\"btn  blue lighten-1\" >&#8592;</Link>\n                    <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">\n                                <b>{project.title}</b>\n                            </span>\n                            <p>{project.content}</p>\n                        </div>\n                        <div className=\"card-action grey lighten-4 grey-text\">\n                            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                            <div>{ moment(project.createdAt.toDate()).calendar() }</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"container center\">\n                    <p>Loading Project</p>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.id] : e.target.value });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign in</h5>\n                    {this.props.authError ? <p className=\"red lighten-4\">{this.props.authError}</p> : null}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" id=\"email\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" id=\"password\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { signUp } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.id] : e.target.value });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign up</h5>\n                    {this.props.authError ? <p className=\"red lighten-4\">{this.props.authError}</p> : null}\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" id=\"email\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" id=\"password\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First name:</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last name:</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\"></div>\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.id] : e.target.value });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Project Title:</label>\n                        <input type=\"text\" id=\"title\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content:</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.onChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create project</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //async call to firebase\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERR', err});\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nclass PrivateRoute extends Component {\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to=\"/signup\" />;\n        return (\n            <Route {...this.props} />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nclass PublicOnlyRoute extends Component {\n    render() {\n        const { auth } = this.props;\n        console.log(this.props);\n        if(auth.uid) return <Redirect to=\"/\" />;\n        return (\n            <Route {...this.props} />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(PublicOnlyRoute);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport PublicOnlyRoute from './components/auth/PublicOnlyRoute';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Navbar />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/project/:id\" component={ProjectDetails} />\n            <PublicOnlyRoute path=\"/signin\" component={SignIn} />\n            <PublicOnlyRoute path=\"/signup\" component={SignUp} />\n            <PrivateRoute path=\"/create-project\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed'\n            };\n        case 'LOGIN_SUCCESS':\n            console.log(\"Login Success\");\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNOUT_SUCCESS':\n            console.log('SIGNED OuT');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('Signup successful');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log('Signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}﻿\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('Create project error:', action.err);\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyD_xQ4fnOykyyZxB44j9xLAWAi6-vZ2yAw\",\n    authDomain: \"spudz-11e16.firebaseapp.com\",\n    databaseURL: \"https://spudz-11e16.firebaseio.com\",\n    projectId: \"spudz-11e16\",\n    storageBucket: \"spudz-11e16.appspot.com\",\n    messagingSenderId: \"730385965936\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({\n    timestampsInSnapshots: true\n});\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fb from './config/fb';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fb),\n        reactReduxFirebase(fb, {\n            useFirestoreForProfile: true,\n            userProfile: 'users',\n            attachAuthIsReady: true\n         })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}